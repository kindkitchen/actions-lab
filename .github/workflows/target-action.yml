name: 'Project redeployment'

on:
  push:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: The environment of the workflow.
        required: true
      
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: true
        description: | 
          The username from dockerhub.
      DOCKERHUB_PASSWORD:
        required: true
        description: | 
          The password from dockerhub.
      DIGITALOCEAN_SSH_PRIVATE_KEY:
        required: true
        description: |
          The ssh private key to connect to digital ocean droplet.
          (the public key should be already stored on droplet ~/.ssh/authorized_keys)         

jobs:
  just_do_it:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'lab' }}
    env:
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DIGITALOCEAN_SSH_PRIVATE_KEY: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 

    steps:      
      - if: env.BRANCH_NAME != 'master' || env.BRANCH_NAME != 'stage' || env.BRANCH_NAME != 'dev'
        run: |
          echo "$BRANCH_NAME should not be used in this workflow!"
          exit 1

      - env:
          VARS: ${{ toJson(vars) }}
        run: echo $VARS | jq -r 'to_entries | .[] | "\(.key)=\(.value | @json)"' > dotenv.txt
      - env:
          SECRETS: ${{ toJson(secrets) }}
        run: echo $SECRETS | jq -r 'to_entries | .[] | "\(.key)=\(.value | @json)"' >> dotenv.txt
      - run: echo "FILE_NAME=dotenv.$(date +%Y_%m_%d_%H_%M_%S).txt" >> $GITHUB_ENV
      - run: cp dotenv.txt $FILE_NAME
      - id: save_file_name
        run: echo FILE_NAME=$FILE_NAME >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v4
        with:
          path: ${{ steps.save_file_name.outputs.FILE_NAME }}
          overwrite: true

